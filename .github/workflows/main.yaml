name: CI/CD workflow
env:
  SERVER_IP: "51.195.44.163"
  SERVER_USER: root
on:
  push:
    branches: main

jobs:
  check-tests-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: ./server/package-lock.json
      - name: Install Dependencies
        run: npm ci --prefer-offline # Delete --cache .npm 
      - name: Lint
        run: npm run lint
      - name: Check Dependencies Security 
        run: npm audit fix
      - name: Launch Test
        run: npm run test:ci
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  check-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: ./client/package-lock.json
      - name: Install Dependencies
        run: npm ci --prefer-offline # Delete --cache .npm 
      - name: Build application frontend
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./client/dist

  build-frontend:
    needs: check-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: ./client/package-lock.json
      - name: Install Dependencies
        run: npm ci --prefer-offline # Delete --cache .npm 
      - name: Lint
        run: npm run lint
      - name: Check Dependencies Security 
        run: npm audit fix
  
  deploy:
    needs: [check-tests-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./dist
      - name: Deploy on Server
        run: |
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.SSH_KEY_VPS }}"
          mkdir -p ~/.ssh
          ssh-keyscan -H $SERVER_API >> ~/.ssh/known_hosts
          scp -r ./server $SERVER_USER@$SERVER_IP:/var/www
          scp -r ./dist $SERVER_USER@$SERVER_IP:/var/www/dist
          ssh $SERVER_USER@$SERVER_IP "cd /var/www/Server && npm install --omit=dev"
          ssh $SERVER_USER@$SERVER_IP "cd /var/www/Server && pm2 startOrRestart ecosystem.config.js --env production && pm2 save"


